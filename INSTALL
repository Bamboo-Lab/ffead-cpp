Moving to the new cmake based build system from autoconf/automake

Prerequisits
============

Before trying to compile ffead-cpp make sure you have installed the
following software packages:

    o cmake >= 3.8.2
    o c++ compiler supporting c++17
    o ssl libraries (including ssl-devel/ssl-dev/openssl-devel/openssl-dev/libssl-dev)
    o unixodbc (including unixodbc-devel/unixodbc-dev/unixodbc)
    o hiredis 
    o mongo-c-driver
    o libmemcached
    o zlib-devel
    o libcurl
    o libuuid-devel
    o libcuckoo

cd /tmp
wget https://github.com/efficient/libcuckoo/archive/master.zip
unzip master.zip
rm -f master.zip
cd /tmp/libcuckoo-master
cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ .
make install
cd /tmp
rm -rf /tmp/libcuckoo-master

Dependencies
============
Centos 7 (1810)
	yum install -y --nogpgcheck tar centos-release-scl centos-release-scl-rh epel-release
	yum install -y --nogpgcheck scl-utils devtoolset-7 cmake3 libcurl libcurl-devel openssl openssl-devel libuuid-devel hiredis hiredis-devel zlib zlib-devel libmemcached libmemcached-devel unixODBC* tar gzip wget nmap-ncat
	scl enable devtoolset-7 bash
	mv /usr/bin/cc /usr/bin/cc_old
	ln -s /opt/rh/devtoolset-7/root/usr/bin/gcc /usr/bin/cc
	ln -s /opt/rh/devtoolset-7/root/usr/bin/g++ /usr/bin/c++
	ln -s /usr/bin/cmake3 /usr/bin/cmake
	#Download and install mongo c driver
	    cd /tmp
	    wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.0/mongo-c-driver-1.4.0.tar.gz
	    tar xf mongo-c-driver-1.4.0.tar.gz
	    cd mongo-c-driver-1.4.0/ && \
	    ./configure --prefix=/usr/local --libdir=/usr/local --disable-automatic-init-and-cleanup && \
	    make && make install

OpenSuse 15 (Tumbleweed)
	zypper in -y gcc gcc-c++ make cmake libcurl-devel hiredis-devel openssl openssl-devel libmemcached-devel zlib-devel libuuid-devel unixODBC unixODBC-devel unzip wget netcat-openbsd tar gzip
	#Download and install mongo c driver
	    cd /tmp
	    wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.0/mongo-c-driver-1.4.0.tar.gz
	    tar xf mongo-c-driver-1.4.0.tar.gz
	    cd mongo-c-driver-1.4.0/ && \
	    ./configure --prefix=/usr/local --libdir=/usr/local --disable-automatic-init-and-cleanup && \
	    make && make install

Ubuntu 18.04.2
	apt update -yqq && apt install -yqq gcc g++ cmake unzip libssl-dev uuid-dev odbc-postgresql unixodbc unixodbc-dev libcurl4-openssl-dev libmemcached-dev libmongoc-dev libhiredis-dev wget netcat

Arch Linux
	pacman -Sy --noconfirm make clang unixodbc curl hiredis libmemcached mongo-c-driver cmake openssh libutil-linux wget gnu-netcat tar gzip zlib unzip gawk procps-ng

Gentoo
	emerge-webrsync
	emerge dev-db/unixODBC curl dev-libs/hiredis libmemcached cmake wget netcat tar gzip zlib
	#Download and install mongo c driver
	    cd /tmp
	    wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.0/mongo-c-driver-1.4.0.tar.gz
	    tar xf mongo-c-driver-1.4.0.tar.gz
	    cd mongo-c-driver-1.4.0/ && \
	    ./configure --prefix=/usr/local --libdir=/usr/local --disable-automatic-init-and-cleanup && \
	    make && make install

MAC OS X - To install all dependencies on MAC OS X use,
	#Make sure Xcode is installed or at-least the Command line tools are present
	xcode-select --install
	open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg (for Mojave)
	#Install homebrew first using,
		ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"
	#Install autoconf libtool automake
		brew install autoconf libtool automake
	#Install cmake
		brew install cmake
	#Install openssl
		brew install openssl
	#Install unixodbc
		brew install unixodbc
	#Install other libraries
	    brew install libmongoc
	    brew install hiredis
	    brew install libmemcached
	
BSD(x86/x86_64) - To install all dependencies on bsd systems use, 
	#If you have not installed sources during install of freebsd then,
	fetch -o /tmp ftp://ftp.freebsd.org/pub/`uname -s`/releases/`uname -m`/`uname -r | cut -d'-' -f1,2`/src.txz
	tar -C / -xvf /tmp/src.txz
	portsnap fetch extract
	cd /usr/ports/devel/cmake && make install
	cd /usr/ports/security/openssl && make install
	cd /usr/ports/databases/unixODBC && make install
	cd /usr/ports/databases/hiredis && make install
	cd /usr/ports/databases/libmemcached && make install
	cd /usr/ports/ftp/wget && make install
	cd /usr/ports/misc/e2fsprogs-libuuid && make install

SOLARIS - To install all dependencies on solaris(OpenCSW) use,
	`pkgutil -y -i autoconf automake libtool unixodbc unixodbc_dev libssl1_0_0 libssl_dev`

OTHERS - haven't tested on any other platform/os yet

Installation Names
==================

   By default, `make install' will install the package's files in
`./ffead-cpp-${version}-bin' etc. The option option `--prefix=PATH' is ignored.

Optional Features
=================
	To create a binary for debugging purposes use 
	cmake -DDEBUG=on .
	
Modules (Features)
==================
	-DMOD_JOBS=on/off (To enable/disable Batch/CRON jobs module)
	-DMOD_MEMORY=on/off (To enable/disable Memory cache module)
	-DMOD_MEMCACHED=on/off (To enable/disable memcached cache module)
	-DMOD_REDIS=on/off (To enable/disable redis cache module)
	-DMOD_SDORM_SQL=on/off (To enable/disable sql orm module)
	-DMOD_SDORM_MONGO=on/off (To enable/disable mongo orm module)
	-DMOD_SER_BIN=on/off (To enable/disable binary serialization module)
