Moving to the new cmake based build system from autoconf/automake

Prerequisits
============

Before trying to compile ffead-cpp make sure you have installed the
following software packages:

    o cmake >= 3.8.2
    o c++ compiler supporting c++17
    o ssl libraries (including ssl-devel/ssl-dev/openssl-devel/openssl-dev/libssl-dev)
    o unixodbc (including unixodbc-devel/unixodbc-dev/unixodbc)
    o hiredis 
    o mongo-c-driver
    o libmemcached
    o zlib-devel
    o libcurl
    o libuuid-devel
    o libcuckoo

cd /tmp
wget https://github.com/efficient/libcuckoo/archive/master.zip
unzip master.zip
cd libcuckoo-master or cd master
cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ .
make install

Dependencies
============
Centos 7 (1810)
	yum install centos-release-scl
	yum install centos-release-scl-rh
	scl enable devtoolset-7 bash
	ln -s /opt/rh/devtoolset-7/root/usr/bin/gcc /usr/bin/cc
	ln -s /opt/rh/devtoolset-7/root/usr/bin/g++ /usr/bin/c++
	install epel-release
	install cmake3
	ln -s /usr/bin/cmake3 /usr/bin/cmake
	libcurl libcurl-devel
	openssl openssl-devel
	uuid uuid-devel
	hiredis hiredis-devel
	zlib zlib-devel
	libmemcached libmemcached-devel
	unixODBC*
	Download and install mongo c driver
		wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.0/mongo-c-driver-1.4.0.tar.gz
		tar xf mongo-c-driver-1.4.0.tar.gz
		cd mongo-c-driver-1.4.0/ && \
	    ./configure --prefix=${IROOT} --libdir=${IROOT} --disable-automatic-init-and-cleanup && \
	    make && make install

OpenSuse 15 (Tumbleweed)
	zypper in gcc gcc-c++ make cmake libcurl-devel hiredis-devel openssl-devel libmemcached-devel zlib-devel libuuid-devel unixODBC unixODBC-devel zlib unzip
	Download and install mongo c driver
		wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.0/mongo-c-driver-1.4.0.tar.gz
		tar xf mongo-c-driver-1.4.0.tar.gz
		cd mongo-c-driver-1.4.0/ && \
	    ./configure --prefix

Ubuntu 18.04.2
	apt install gcc g++ cmake
	apt install libcurl4-openssl-dev
	apt install libmemcached-dev libmongoc-dev libhiredis-dev
	apt install unixodbc
	apt install libssl-dev

MAC OS X - To install all dependencies on MAC OS X use,
	Make sure Xcode is installed or at-least the Command line tools are present
	xcode-select --install
	open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg (for Mojave)
	Install homebrew first using,
		ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"
	Install autoconf libtool automake
		brew install cmake
	Install openssl
		brew install openssl
	Install unixodbc
		brew install unixodbc
	Install other libraries
	    brew install libmongoc
	    brew install hiredis
		brew install libmemcached
	Run 
		cmake .
		make install

SOLARIS - To install all dependencies on solaris(OpenCSW) use,
	`pkgutil -y -i autoconf automake libtool unixodbc unixodbc_dev libssl1_0_0 libssl_dev`
	
BSD(x86/x86_64) - To install all dependencies on bsd systems use, 
	If you have not installed sources during install of freebsd then,
		fetch -o /tmp ftp://ftp.freebsd.org/pub/`uname -s`/releases/`uname -m`/`uname -r | cut -d'-' -f1,2`/src.txz
		tar -C / -xvf /tmp/src.txz
	portsnap fetch extract
	cd /usr/ports/devel/cmake && make install
	cd /usr/ports/security/openssl && make install
	cd /usr/ports/databases/unixODBC && make install
	cd /usr/ports/databases/hiredis && make install
	cd /usr/ports/databases/libmemcached && make install
	cd /usr/ports/ftp/wget && make install
	cd /usr/ports/misc/e2fsprogs-libuuid && make install

Arch Linux 2019-02-01
	Install Arch Linux https://wiki.archlinux.org/index.php/installation_guide
			   http://www.cs.columbia.edu/~jae/4118-LAST/arch-setup-2018-1.html
	pacman -Sy unixodbc curl hiredis libmemcached mongo-c-driver cmake openssh libutil-linux automake autoconf libtool wget

OTHERS - haven't tested on any other platform/os yet

Installation Names
==================

   By default, `make install' will install the package's files in
`./ffead-cpp-${version}-bin' etc. The option option `--prefix=PATH' is ignored.

Optional Features
=================
	To create a binary for debugging purposes use 
	cmake -DDEBUG=on .
	
Modules (Features)
==================
	-DMOD_JOBS=on/off (To enable/disable Batch/CRON jobs module)
	-DMOD_MEMORY=on/off (To enable/disable Memory cache module)
	-DMOD_MEMCACHED=on/off (To enable/disable memcached cache module)
	-DMOD_REDIS=on/off (To enable/disable redis cache module)
	-DMOD_SDORM_SQL=on/off (To enable/disable sql orm module)
	-DMOD_SDORM_MONGO=on/off (To enable/disable mongo orm module)
	-DMOD_SER_BIN=on/off (To enable/disable binary serialization module)
